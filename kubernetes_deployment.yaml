---

apiVersion: v1
kind: Namespace
metadata:
  name: benchmark
  labels:
    name: benchmark



---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: scheduler-ingress
  namespace: benchmark
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
    traefik.frontend.entryPoints: http,https
    ingress.kubernetes.io/force-ssl-redirect: "true"

spec:
  rules:
  - host: scheduler.ditasbench.k8s.ise-apps.de
    http:
      paths:
      - path: /
        backend:
          serviceName: scheduler
          servicePort: 8081

---

apiVersion: v1
kind: Service
metadata:
  namespace: benchmark
  annotations:
  labels:
  name: scheduler
spec:
  ports:
  - name: http
    port: 8081
    targetPort: 8081
  selector:
    app: scheduler

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: benchmark
  annotations:
  labels:
    name: scheduler
    app: scheduler
  name: scheduler
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: scheduler
    spec:
      containers:
      - env:
         - name: MONGO_URL
           value: http://mongo.benchmark.svc.cluster.local
         - name: JAVA_OPTIONS
           value: "-Dspring.profiles.active=production"
         - name: SPRING_PROFILES_ACTIVE
           value: production
        image: durgen/benchmarkscheduler:0.0.6
        name: scheduler
        ports:
        - containerPort: 8081
        imagePullPolicy: Always
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  namespace: benchmark
  labels:
  annotations:
  name: mongo
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    io.kompose.service: mongo

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: benchmark
  creationTimestamp: null
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - containerPort: 27017
        resources: {}
      restartPolicy: Always
